      AWSTemplateFormatVersion: 2010-09-09
      Description:  for ETAP ASG Web Tier




      Metadata:
        AWS::CloudFormation::Interface: 
          ParameterGroups:
          - 
            Label: 
              default: Email Address
            Parameters:
              - OperatorEMail
          - 
            Label: 
              default: Image ID
            Parameters:
              - EC2ImageID
          - 
            Label: 
              default: Launch Template Name
            Parameters:
              - WebTierLaunchTemplateName
          - 
            Label: 
              default: Instance Type
            Parameters:
              - InstanceType
          - 
            Label: 
              default: EC2 KeyPair
            Parameters:
              - EC2KeyName

 ###########################################################  PARAMETERS ##############################################################################     
      Parameters:

        etapVPC:
          Description: Select One VPC available in your existing account
          Type: AWS::EC2::VPC::Id
          Default: "vpc-0d7d3dc91b8774d1f"

        OperatorEMail:
          Description: A valid EMail address to notify if there are any scaling operations
          Type: String
      
        EC2KeyName:
          Description: Name of an EC2 KeyPair to enable SSH access to the instance.
          Type: AWS::EC2::KeyPair::KeyName
          ConstraintDescription: Must be the name of an existing EC2 KeyPair.
      
        EC2ImageID:
          Description: The ID of the custom AMI
          Type: String
      
        WebTierLaunchTemplateName:
          AllowedPattern: '[a-zA-Z0-9\(\)\.\-/_]+'
          ConstraintDescription: No spaces or special characters like '&', '*', '@'.
          Default: APP-Server-Tier-Template
          Description: Name of launch template
          Type: String
      
        InstanceType:
          Description: WebServers EC2 instance type
          Type: String
          Default: t2.micro
          AllowedValues:
          
            - t1.micro
            - t2.nano
            - t2.micro
            - t2.small
          ConstraintDescription: Must be a valid EC2 instance type
        
        PrivateSubnets:
            Type: CommaDelimitedList
            Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
            Default: subnet-0304eabfab0d083df, subnet-0aefbb5760981c8f9
 
###########################################################  RESOURCES ##############################################################################

      Resources:
#        etapVPC:
#          Type: AWS::EC2::VPC
#          Properties:
#            CidrBlock: 19.0.0.0/16
#            EnableDnsSupport: true
#            EnableDnsHostnames: true 
#            Tags:
#              - Key: Name
#                Value: etapVPC

###########################################################   Security Groups #########################################################################
        ASGAPPSecurityGroup:
          Type: AWS::EC2::SecurityGroup
          Properties:
            GroupName: AllowEC2TrafficForAPP
            GroupDescription: Enable SSH access and HTTP access 
            VpcId: !Ref etapVPC 
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 0.0.0.0/0
            Tags:
              - Key: Name
                Value: ASGAPPSecurityGroup

###########################################################   Launch Template #########################################################################
        AppTierLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: !Ref WebTierLaunchTemplateName
            LaunchTemplateData: 
              ImageId: !Ref EC2ImageID
              InstanceType: !Ref InstanceType
              KeyName: !Ref EC2KeyName
              Monitoring:
                Enabled: true
      #         UserData:
      #           Fn::Base64: 
      #             !Sub |
      #               #!/bin/bash
      #               sudo apt-get update -y
      #               sudo apt-get install -y apache2
      #               cd /var/www/html
      #               sudo rm -rf index.html 
      #               sudo git clone https://github.com/etapjomar/etapapitest.git
      #               sudo mv etapapitest/* /var/www/html
      #               sudo apt-get install php-curl php-mysql php -y
      #               sudo systemctl start apache2
      #               sudo systemctl enable apache2
              SecurityGroupIds:
                - !Ref ASGAPPSecurityGroup
        NotificationTopic:
          Type: AWS::SNS::Topic
          Properties:
            Subscription:
              #parameters data inputted
              - Endpoint: !Ref OperatorEMail
                Protocol: email

###########################################################   Elb Target group #########################################################################
        ELBTargetGroup:
          Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
          Properties:
            HealthCheckIntervalSeconds: 6
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 2
            VpcId: !Ref etapVPC
            TargetType: instance

###########################################################   Elb Security Gruop #########################################################################
        ELBAPPSecurityGroup:
          Type: AWS::EC2::SecurityGroup
          Properties:
            GroupName: "APPTraffic"
            GroupDescription: "Enable HTTP access on the inbound port for ELB"
            VpcId: !Ref etapVPC
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 443
                ToPort: 443
                CidrIp: 0.0.0.0/0
            Tags:
              - Key: Name
                Value: ELBAPPSecurityGroup
        ElasticLoadBalancer:
          Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
          Properties:
            Scheme: "internal"
            Subnets: !Ref PrivateSubnets
            SecurityGroups: 
              - !Ref ELBAPPSecurityGroup

        ElbListener:
          Type: 'AWS::ElasticLoadBalancingV2::Listener'
          Properties:
            DefaultActions:
              - Type: forward
                TargetGroupArn: !Ref ELBTargetGroup
            LoadBalancerArn: !Ref ElasticLoadBalancer
            Port: '80'
            Protocol: HTTP
            
        AppTierAutoScalingGroup:
          Type: AWS::AutoScaling::AutoScalingGroup
          DependsOn:
            - ELBTargetGroup
            - ElasticLoadBalancer
          Properties:
              AutoScalingGroupName:  APP-TIER Scaling Group
              VPCZoneIdentifier: !Ref PrivateSubnets
                #- "subnet-0afe12b53c4e13c95"
                #- "subnet-00dbe3524a03a654f"
              HealthCheckGracePeriod: 300
              HealthCheckType: EC2
              LaunchTemplate:
                LaunchTemplateId: !Ref AppTierLaunchTemplate
                #LaunchConfigurationName: !Ref WebTierLaunchTemplate
                Version: !GetAtt AppTierLaunchTemplate.LatestVersionNumber
              MinSize: '1'
              MaxSize: '4'
              DesiredCapacity: '1'
              Tags:
              - Key: Name
                Value: ASG-APP
                PropagateAtLaunch: true
              TargetGroupARNs:
                - !Ref ELBTargetGroup
              #TargetGroupARNs:
              #    !Ref ELBTargetGroup
                #- !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/awseb-AWSEB-CCCYJOAHMJWJ/3b482ea5a9b82b5c"
                
              NotificationConfiguration:
                  TopicARN: !Ref NotificationTopic
                  NotificationTypes:
                    - 'autoscaling:EC2_INSTANCE_LAUNCH'
                    - 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR'
                    - 'autoscaling:EC2_INSTANCE_TERMINATE'
                    - 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR'
        WebServerScaleUpPolicy:
          Type: AWS::AutoScaling::ScalingPolicy
          Properties:
            AdjustmentType: ChangeInCapacity
            AutoScalingGroupName: !Ref AppTierAutoScalingGroup
            Cooldown: 360
            ScalingAdjustment: 1
      
        WebServerScaleDownPolicy:
          Type: 'AWS::AutoScaling::ScalingPolicy'
          Properties:
            AdjustmentType: ChangeInCapacity
            AutoScalingGroupName: !Ref AppTierAutoScalingGroup
            Cooldown: 360
            ScalingAdjustment: -1
      
        CPUAlarmHigh:
          Type: AWS::CloudWatch::Alarm
          Properties:
            AlarmDescription: Scale-up if CPU > 90% for 10 minutes
            MetricName: CPUUtilization
            Namespace: AWS/EC2
            Statistic: Average
            Period: 300
            EvaluationPeriods: 2
            Threshold: 90
            AlarmActions:
              - !Ref WebServerScaleUpPolicy
            Dimensions:
              - Name: AutoScalingGroupName
                Value: !Ref AppTierAutoScalingGroup
            ComparisonOperator: GreaterThanThreshold
      
        CPUAlarmLow:
          Type: 'AWS::CloudWatch::Alarm'
          Properties:
            AlarmDescription: Scale-down if CPU < 70% for 10 minutes
            MetricName: CPUUtilization
            Namespace: AWS/EC2
            Statistic: Average
            Period: 300
            EvaluationPeriods: 2
            Threshold: 70
            AlarmActions:
              - !Ref WebServerScaleDownPolicy
            Dimensions:
              - Name: AutoScalingGroupName
                Value: !Ref AppTierAutoScalingGroup
            ComparisonOperator: LessThanThreshold
  